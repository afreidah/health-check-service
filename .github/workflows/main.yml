# ------------------------------------------------------------------------------
# GitHub Actions Workflow - CI/CD Pipeline
#
# PR Pipeline (pull_request):
# - Code formatting, linting, tests, build, security scans
#
# Merge Pipeline (push to main):
# - Re-runs all PR checks
# - Tags Docker image with commit SHA
# - Pushes to container registry
# ------------------------------------------------------------------------------

name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

# ------------------------------------------------------------------------------
# Jobs
# ------------------------------------------------------------------------------

jobs:
  # PR checks - runs on pull requests
  pr-checks:
    name: PR Pipeline
    if: github.event_name == 'pull_request'
    runs-on: [self-hosted, linux]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25.1'

    # Ensure user-local and GOPATH bins are on PATH and install Checkov via pipx
    # (avoids PEP 668 "externally-managed-environment" errors)
    - name: Tooling PATH + install Checkov (pipx)
      run: |
        echo "$HOME/.local/bin:$(go env GOPATH)/bin" >> "$GITHUB_PATH"
        if ! command -v pipx >/dev/null 2>&1; then
          if command -v apt-get >/dev/null 2>&1; then
            export DEBIAN_FRONTEND=noninteractive
            apt-get update -y
            apt-get install -y python3-venv pipx
          fi
        fi
        python3 -m pipx ensurepath || true
        pipx install --force checkov

    - name: Run PR Pipeline
      run: make pull_request

    - name: PR Check Summary
      if: always()
      run: |
        echo "✅ PR pipeline complete"
        echo "Branch: ${{ github.head_ref }}"
        echo "Commit: ${{ github.sha }}"

  # Merge pipeline - runs on push to main
  merge:
    name: Build, Tag, and Push
    if: github.event_name == 'push'
    runs-on: [self-hosted, linux]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25.1'

    # Ensure user-local and GOPATH bins are on PATH and install Checkov via pipx
    # (avoids PEP 668 "externally-managed-environment" errors)
    - name: Tooling PATH + install Checkov (pipx)
      run: |
        echo "$HOME/.local/bin:$(go env GOPATH)/bin" >> "$GITHUB_PATH"
        if ! command -v pipx >/dev/null 2>&1; then
          if command -v apt-get >/dev/null 2>&1; then
            export DEBIAN_FRONTEND=noninteractive
            apt-get update -y
            apt-get install -y python3-venv pipx
          fi
        fi
        python3 -m pipx ensurepath || true
        pipx install --force checkov

    - name: Run Merge Pipeline
      run: make merge DOCKER_TAG=${{ github.sha }}
      env:
        DOCKER_TAG: ${{ github.sha }}

    - name: Deployment Summary
      run: |
        echo "✅ Merge pipeline complete"
        echo "Image: docker-mirror.service.consul:5000/health-checker:${{ github.sha }}"
        echo "Commit: ${{ github.sha }}"
        echo "Pushed to registry: docker-mirror.service.consul:5000"

